<?php

class ExploitationController extends Zend_Controller_Action
{
	public function init(){
		$this->view->headLink()->appendStylesheet('/css/DrhCSS.css');
		$this->view->headScript()->appendFile('/js/ExploitationFonction.js');
		$this->view->headScript()->appendFile('/js/jquery-ui-timepicker-addon.js');
		$this->view->headLink()->appendStylesheet('/css/jquery-ui-timepicker-addon.css');
		$this->view->headLink()->appendStylesheet('/css/jquery-ui-1.8.23.css');
		date_default_timezone_set('Europe/Paris');
		
		$acl = new Aeroport_LibraryAcl();
		$SRole = new Zend_Session_Namespace('Role');
		if(!$acl->isAllowed($SRole->id_service, $this->getRequest()->getControllerName(), $this->getRequest()->getActionName()))
		{
			$this->_redirector->gotoUrl('/');
		}
		
		parent::init();
	}

	public function indexAction(){
		$theDate = date('Y-m-d');
		$tableVol = new Vol();
		
		if($this->getRequest()->getParam('page')){
			$pageParam = htmlentities($this->getParam('page'), ENT_QUOTES, 'UTF-8');
			$params = array($pageParam => 'int');
			if(Aeroport_Fonctions::validParam($params)){
				$page = $pageParam;
			}
			else{
				$page = 1;
			}
		}
		else
			$page = 1;
		
		if($this->getRequest()->getParam('orderBy'))
			$orderBy = $this->getRequest()->getParam('orderBy');
		else
			$orderBy = 'ligne_Asc';
		
		switch ($orderBy)
		{
			case 'ligne_Asc': $req = $tableVol->getVolByDate($theDate, 'numero_ligne asc')->toArray(); break;
			case 'ligne_Desc': $req = $tableVol->getVolByDate($theDate, 'numero_ligne desc')->toArray(); break;
			case 'aerdep_Asc': $req = $tableVol->getVolByDate($theDate, 'id_aeroport_depart_effectif asc')->toArray(); break;
			case 'aerdep_Desc': $req = $tableVol->getVolByDate($theDate, 'id_aeroport_depart_effectif desc')->toArray(); break;
			case 'aerarr_Asc': $req = $tableVol->getVolByDate($theDate, 'id_aeroport_arrivee_effectif asc')->toArray(); break;
			case 'aerarr_Desc': $req = $tableVol->getVolByDate($theDate, 'id_aeroport_arrivee_effectif desc')->toArray(); break;
			case 'heudep_Asc': $req = $tableVol->getVolByDate($theDate, 'heure_depart asc')->toArray(); break;
			case 'heudep_Desc': $req = $tableVol->getVolByDate($theDate, 'heure_depart desc')->toArray(); break;
			case 'heuarr_Asc': $req = $tableVol->getVolByDate($theDate, 'heure_arrivee_effective asc')->toArray(); break;
			case 'heuarr_Desc': $req = $tableVol->getVolByDate($theDate, 'heure_arrivee_effective desc')->toArray(); break;
		}
		
		$this->view->order = $orderBy;
		$this->view->ligne = Aeroport_Tableau_OrderColumn::orderColumns($this, 'ligne', $orderBy, null, 'Ligne');
		$this->view->aerdep = Aeroport_Tableau_OrderColumn::orderColumns($this, 'aerdep', $orderBy, null, 'Aéroport de départ');
		$this->view->aerarr = Aeroport_Tableau_OrderColumn::orderColumns($this, 'aerarr', $orderBy, null, 'Aéroport d\'arrivée');
		$this->view->heudep = Aeroport_Tableau_OrderColumn::orderColumns($this, 'heudep', $orderBy, 'thDateEmbauche', 'Heure de départ');
		$this->view->heuarr = Aeroport_Tableau_OrderColumn::orderColumns($this, 'heuarr', $orderBy, 'thDateEmbauche', 'Heure d\'arrivée');
		
		$paginator = Zend_Paginator::factory($req);
		$paginator->setItemCountPerPage(25);
		$paginator->setCurrentPageNumber($page);
		$this->view->vol = $paginator;
		$this->view->param = $this->getAllParams();
	}
	
	public function ficheVolAction(){
		if(!($this->hasParam('ligne')) || !($this->hasParam('vol'))){
			Aeroport_Fonctions::redirector('/exploitation');
		}else{
			$ligneParam = htmlentities($this->getParam('ligne'), ENT_QUOTES, 'UTF-8');
			$volParam = htmlentities($this->getParam('vol'), ENT_QUOTES, 'UTF-8');
				
			$params = array($volParam => 'int', $ligneParam => 'int');
			if(!Aeroport_Fonctions::validParam($params)){
				Aeroport_Fonctions::redirector('/exploitation');
			}
		}

		$tableLigne = new Ligne;
		$tableVol = new Vol;
		$form = new FormulaireExploitation();
		
		$laLigne = $tableLigne->find($ligneParam)->current();
		$this->view->vol = $tableVol->getAllInfoVol($ligneParam, $volParam);
		$this->view->jours = $laLigne->findJourSemaineViaPeriodicite();
		$this->view->nbJours = count($laLigne->findJourSemaineViaPeriodicite());
		
		if($this->getRequest()->isPost()){
			$data = $this->getRequest()->getPost();
		
			if($form->isValid($data)){
				$aeroportDepart = $form->getValue('aeroportDepart');
				$aeroportArrivee = $form->getValue('aeroportArrivee');
				$heure = $form->getValue('heureArrivee');
					
				$updateVol = $tableVol->getInfosVolById($ligneParam, $volParam);
				$updateVol->id_aeroport_depart_effectif = $aeroportDepart;
				$updateVol->id_aeroport_arrivee_effectif = $aeroportArrivee;
				$updateVol->heure_arrivee_effective = $heure;
				$updateVol->save();
		
				Aeroport_Fonctions::redirector('/exploitation/');
		
			}else{
				$this->view->form = $form;
			}
		}else{
			$this->view->form = $form;
		}
	}
	
	public function rechercherVilleAction(){
		$this->_helper->layout()->disableLayout();
		
		$idPays = htmlentities($this->getParam('id'), ENT_QUOTES, 'UTF-8');
		$tableVille = new Ville();
		
		$villes = $tableVille->getVillesByIdPays($idPays);
		foreach($villes as $ville){
			echo '<option value="'.$ville->code_ville.'">'.$ville->nom.'</option>';
		}
	}
	
	public function rechercherAeroportAction(){
		$this->_helper->layout()->disableLayout();
	
		$idVille = htmlentities($this->getParam('id'), ENT_QUOTES, 'UTF-8');
		$tableAeroport = new Aeroport();
	
		$aeroports = $tableAeroport->getAeroportByVille($idVille);
		foreach($aeroports as $aeroport){
			echo '<option value="'.$aeroport->id_aeroport.'">'.$aeroport->nom.'</option>';
		}
	}
}
  

